name: Build NCR DMA Test Tool

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build with m68k-amigaos-gcc
      run: |
        docker run --rm \
          -v ${PWD}:/work \
          -w /work \
          amigadev/crosstools:m68k-amigaos \
          bash -c "make clean && make ncr_dmatest"

    - name: Display build info
      run: |
        ls -lh ncr_dmatest
        file ncr_dmatest
        echo "Version string:"
        strings ncr_dmatest | grep ncrtest
        docker run --rm \
          -v ${PWD}:/work \
          -w /work \
          amigadev/crosstools:m68k-amigaos \
          m68k-amigaos-size ncr_dmatest

    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: ncr_dmatest-${{ github.sha }}
        path: ncr_dmatest
        retention-days: 90

    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ncr_dmatest
        body: |
          NCR 53C710 DMA Test Tool

          **Version:** ${{ github.ref_name }}
          **Commit:** ${{ github.sha }}
          **Built with:** m68k-amigaos-gcc 6.5.0b

          This is a standard Amiga executable that tests the NCR 53C710 SCSI chip's DMA engine.

          ## Files in this Release
          - `ncr_dmatest` - Standard Amiga executable (built with gcc)

          **Note:** The ROM module (`ncr_dmatest.resource`) requires vbcc and must be built locally.
          See [ROM_MODULE.md](https://github.com/terriblefire/ncrtest/blob/main/ROM_MODULE.md) for instructions.

          ## Usage
          Copy `ncr_dmatest` to your Amiga 4000T and run from CLI/Shell.

          ## Test Coverage
          - CHIP → CHIP memory transfers
          - FAST → FAST memory transfers
          - CHIP → FAST memory transfers
          - FAST → CHIP memory transfers

          Multiple test patterns (ZEROS, ONES, WALKING, ALTERNATING, RANDOM)
          Multiple transfer sizes (4 bytes to 16KB)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
